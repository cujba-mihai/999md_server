# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  _id: String!
  name: String!
  subcategories: [Subcategory!]
}

input CreateCategoriesInput {
  categoriesToAdd: [String!]!
}

input CreateCategoryDTO {
  name: String!
  subcategories: [CreateSubcategoriesInput!]
}

input CreateProductInput {
  author: String!
  category: String!
  currency: String!
  description: String
  images: [String!]!
  name: String!
  price: Int!
  productDetails: String!
  subcategory: String!
  thumbnail: String!
}

type CreateSubcategoriesDTO {
  childSubcategories: [CreateSubcategoriesDTO!]
  name: String!
}

input CreateSubcategoriesInput {
  childSubcategories: [CreateSubcategoriesInput!] = []
  name: String!
}

input CreateSubcategoryInput {
  categoryId: String!
  name: String!
}

type FormField {
  _id: ID!
  label: String!
  options: [String!]!
  type: String!
  validationSchema: String!
}

input GetByIdDTO {
  _id: String!
}

type GetCategoriesDTO {
  _id: String!
  name: String!
  subcategories: [SubcategoriesDTO!]!
}

input GetOneSubcategoryDTO {
  _id: String!
}

type GetProductsDTO {
  _id: String!
  author: GetUserDTO!
  category: GetCategoriesDTO!
  currency: String!
  description: String!
  images: [String!]!
  name: String!
  price: Float!
  productDetails: String!
  subcategory: SubcategoriesDTO!
  thumbnail: String!
}

input GetSubcategoryByRelationDTO {
  category: String!
  subcategory: String!
}

type GetUserDTO {
  _id: String!
  access_token: String
  email: String!
  firstName: String!
  lastName: String!
  products: [GetProductsDTO!]!
  refresh_token: String
}

input ListProductsByCategoryDTO {
  categoryId: ID!
  limit: Float! = 50
  offset: Float! = 0
}

input ListProductsBySubcategoryDTO {
  limit: Float! = 50
  offset: Float! = 0
  subCategoryId: ID!
}

type Locations {
  _id: ID!
  location: String!
  region: String!
  sector: [String!]!
}

type Mutation {
  LogIn(email: String!, password: String!): User!
  Register(input: UserInput!): UserType!
  createCategories(createCategoriesInput: CreateCategoriesInput!): [Category!]!
  createCategory(category: CreateCategoryDTO!): Category!
  createProduct(createProductInput: CreateProductInput!): Product!
  createRegionWithLocations: Regions!
  createRegionsWithLocations: [Regions!]!
  createSubcategories: Subcategory!
  createSubcategory(
    createSubcategoryInput: CreateSubcategoryInput!
  ): Subcategory!
  removeAllCategories: Boolean!
  removeAllFields: Boolean!
  removeAllProducts: Product!
  removeAllRegions: Boolean!
  removeAllSubcategories: Boolean!
  removeAllUsers: Boolean!
  removeProduct(_id: GetByIdDTO!): Product!
  removeSubcategory(id: GetOneSubcategoryDTO!): Subcategory!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  updateSubcategory(
    updateSubcategoryInput: UpdateSubcategoryInput!
  ): Subcategory!
  userCreateProduct(product: CreateProductInput!, userId: String!): UserType!
}

type Product {
  _id: String!
  author: String!
  category: String!
  currency: String!
  description: String!
  images: [String!]!
  name: String!
  price: Float!
  productDetails: String!
  subcategory: String!
  thumbnail: String!
}

type Query {
  findAllFields: [FormField!]!
  findByRelation(filter: GetSubcategoryByRelationDTO!): SubcategoriesDTO!
  findRegion: Regions!
  findRegions: [Regions!]!
  getCategories: [Category!]!
  getCategoryById(_id: String!): Category!
  getCategoryByName(categoryName: String!): Category!
  getCategoryByNameAndSubcategory(
    categoryName: String!
    subcategoryName: String!
  ): Category!
  getProducts: [GetProductsDTO!]!
  getProductsByCategory(
    listProductByCategoryInput: ListProductsByCategoryDTO!
  ): [GetProductsDTO!]!
  getProductsBySubcategory(
    listProductByCategoryInput: ListProductsBySubcategoryDTO!
  ): [GetProductsDTO!]!
  me: User!
  product(_id: GetByIdDTO!): GetProductsDTO!
  products: [Product!]!
  subcategories: [Subcategory!]!
  subcategory(subcategoryId: GetOneSubcategoryDTO!): SubcategoriesDTO!
  users: [UserType!]!
}

type Regions {
  _id: ID!
  locations: [Locations!]!
  region: String!
}

type SubcategoriesDTO {
  _id: String!
  childSubcategories: [SubcategoriesDTO!]
  name: String
}

input SubcategoriesInputDTO {
  _id: String!
  childSubcategories: [SubcategoriesInputDTO!] = []
  name: String
}

type Subcategory {
  _id: String!
  childSubcategories: [Subcategory!]
  name: String!
}

input UpdateProductInput {
  author: String
  category: String
  currency: String
  description: String
  id: String!
  images: [String!]
  name: String
  price: Int
  productDetails: String
  subcategory: String
  thumbnail: String
}

input UpdateSubcategoryInput {
  _id: String!
  categoryId: String
  name: String
}

type User {
  _id: String!
  access_token: String
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  products: [Product!]!
  refresh_token: String
}

input UserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type UserType {
  _id: ID!
  email: String!
  firstName: String!
  lastName: String!
  products: [Product!]!
}
